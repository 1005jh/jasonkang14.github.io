{"componentChunkName":"component---src-templates-post-template-js","path":"/react-native/androidmanifest-xml-explained-app-components","webpackCompilationHash":"e362362944f7eabf4ef4","result":{"data":{"markdownRemark":{"id":"a23bbe76-c2c4-5473-bef8-65648656c78d","html":"<p>For each app component like <code class=\"language-text\">activity</code> and <code class=\"language-text\">service</code> a corresponding XML element must be declared in the manifest file</p>\n<h1 id=\"activities\"><a href=\"#activities\" aria-label=\"activities permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Activities</h1>\n<h3 id=\"tldr\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h3>\n<p>An entry point for interacting with the user. It represents a single screen with a user interface</p>\n<h3 id=\"explanation\"><a href=\"#explanation\" aria-label=\"explanation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanation</h3>\n<p>An email app can have two different activities: one to read emails, and the other to write an email. The two activities work together to form a cohesive user experience, but each one is independent of the others. Therefore, each activity must be declared separately. You can also add an ativity to access a camera in order to attach a picture or a video.</p>\n<p>What to consider when making an activity</p>\n<ol>\n<li>Keep track of the current screen to ensure the system runs the process that is hosting the current activity</li>\n<li>Know that stopped activities contain data the user may return to -> store the data</li>\n<li>Help the app handle kill an activity to allow users to return to activities with their previous state restored</li>\n<li>Provide a way for apps to implement user flows betweeen each other</li>\n</ol>\n<h1 id=\"services\"><a href=\"#services\" aria-label=\"services permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Services</h1>\n<h3 id=\"tldr-1\"><a href=\"#tldr-1\" aria-label=\"tldr 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h3>\n<p>A general-purpose entry point for keeping an app running in the background</p>\n<h3 id=\"explanation-1\"><a href=\"#explanation-1\" aria-label=\"explanation 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanation</h3>\n<p>Since a <code class=\"language-text\">service</code> tag is used to run an Android app in the background, a <code class=\"language-text\">service</code> tag does not provide a user inteface. For example, a <code class=\"language-text\">service</code> tag may play some music in the background while the user is in a different app. Another component like an <code class=\"language-text\">activity</code> can start the <code class=\"language-text\">service</code> and let it run or bind to it in order to interact with it.</p>\n<p>Two semantics services tell can tell tye system about how to manage an app:</p>\n<ol>\n<li>\n<p>Started services tell the system to keep them running until their work is completed. Could be used to sync some data in the background or play music even after the user leaves the app</p>\n<ul>\n<li>Music playback is something a user is directly aware of</li>\n<li>A regular background service is something tthat a user is unaware of</li>\n</ul>\n</li>\n<li>Bound services run because another app or the system has said that it wants to make use of the service. It is like providing an API for an app to use in the background.</li>\n</ol>\n<h1 id=\"activating-components\"><a href=\"#activating-components\" aria-label=\"activating components permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Activating Components</h1>\n<p><code class=\"language-text\">Activities</code> and <code class=\"language-text\">services</code> are activated by an asynchronous message called an <code class=\"language-text\">intent</code>, which binds individual components to each other at runtime. <code class=\"language-text\">Intent</code> defines the action to perform and may specify the URI of the data to act on. An <code class=\"language-text\">intent</code> may convey a request for an <code class=\"language-text\">activity</code> to show an image or to open a webpage. You can also start an <code class=\"language-text\">activity</code> to receive a result in which case the <code class=\"language-text\">activity</code> also returns the reuslt in an <code class=\"language-text\">intent</code></p>\n<h1 id=\"androidmanifestxml\"><a href=\"#androidmanifestxml\" aria-label=\"androidmanifestxml permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AndroidManifest.xml</h1>\n<p>If a <code class=\"language-text\">component</code> is declared in <code class=\"language-text\">AndroidManifest.xml</code> without a specific package name but uses a <code class=\"language-text\">.</code> instead, it assumes that the appâ€™s package name must be used. An <code class=\"language-text\">Intent</code> object is defined with <code class=\"language-text\">&lt;intent-filter&gt;</code> element in <code class=\"language-text\">AndroidManifext.xml</code></p>","fields":{"slug":"/react-native/androidmanifest-xml-explained-app-components","tagSlugs":["/tag/reactnative/","/tag/android/"]},"frontmatter":{"date":"2020-02-27T14:53:37.121Z","description":"AndroidManifest.xml app components explained","tags":["reactnative","android"],"title":"React Native - AndroidManifest.xml Explained [2]"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-native/androidmanifest-xml-explained-app-components"}}}