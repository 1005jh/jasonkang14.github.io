{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/javascript/this-bind-apply-call","webpackCompilationHash":"7e4880a7e00b88d315d3","result":{"data":{"markdownRemark":{"id":"cf13af84-042e-5449-b8f3-607c2adf0615","html":"<ol>\n<li>\n<p><code class=\"language-text\">this</code></p>\n<ul>\n<li><code class=\"language-text\">this</code> is defined/determined by how a function is called.</li>\n<li>Global Context: <code class=\"language-text\">this</code> refers to the global object (<code class=\"language-text\">window</code> in browser, <code class=\"language-text\">global</code> in node.js)</li>\n<li>Functional Context:</li>\n<li>if not in <code class=\"language-text\">strict mode</code>, <code class=\"language-text\">this</code> refers to the global object</li>\n<li>if in <code class=\"language-text\">strict mode</code>, <code class=\"language-text\">this</code> is undefined</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function f2() {\n  &#39;use strict&#39;; // see strict mode\n  return this;\n}\n\nf2() === undefined; // true</code></pre></div>\n<ul>\n<li>the above is because function <code class=\"language-text\">f2</code> is called directly. not as a method or a property of the <code class=\"language-text\">window</code> object</li>\n<li>To set the value of this to a particular value when calling a function, use <code class=\"language-text\">call()</code>, or <code class=\"language-text\">apply()</code></li>\n<li><code class=\"language-text\">apply</code> / <code class=\"language-text\">call</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var obj = {a: &#39;Custom&#39;};\n\nvar a = &#39;Global&#39;;\n\nfunction whatsThis() {\n  return this.a;\n}\n\nwhatsThis();          // &#39;Global&#39;\nwhatsThis.call(obj);  // &#39;Custom&#39;\nwhatsThis.apply(obj); // &#39;Custom&#39;</code></pre></div>\n<p>if you call a function without <code class=\"language-text\">call</code> or <code class=\"language-text\">apply</code>, <code class=\"language-text\">this</code> refers to the <code class=\"language-text\">window</code> object. However, if you call the same function with <code class=\"language-text\">call</code> or <code class=\"language-text\">apply</code>, you set <code class=\"language-text\">this</code> as the <code class=\"language-text\">object</code> with which you are calling the function.</p>\n<p>if the value you are passing with <code class=\"language-text\">call</code> or <code class=\"language-text\">apply</code> is not an object, the browser will use the internal method <code class=\"language-text\">ToObject()</code> in order to convert it to an object.</p>\n<ol start=\"3\">\n<li>\n<p><code class=\"language-text\">bind</code></p>\n<ul>\n<li>if you call a function using bind like <code class=\"language-text\">foo.bind(someObject)</code> this is the <code class=\"language-text\">someObject</code> regardless of how the function is being called.</li>\n<li>but you cannot <code class=\"language-text\">bind</code> more than once.</li>\n</ul>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function f() {\n  return this.a;\n}\n\nvar g = f.bind({a: &#39;azerty&#39;});\nconsole.log(g()); // azerty\n\nvar h = g.bind({a: &#39;yoo&#39;}); // bind only works once!\nconsole.log(h()); // azerty</code></pre></div>\n<ol start=\"4\">\n<li>\n<p>arrow function</p>\n<ul>\n<li>if you use an arrow function, you donâ€™t have to bind this.</li>\n</ul>\n</li>\n</ol>","fields":{"slug":"/posts/javascript/this-bind-apply-call","tagSlugs":["/tag/javascript/","/tag/this/","/tag/bind/","/tag/apply/","/tag/call/"]},"frontmatter":{"date":"2019-11-30T12:53:37.121Z","description":"Basics of JavaScript: this, apply, call, bind, arrow function","tags":["javascript","this","bind","apply","call"],"title":"JavaScript - this, apply, call, bind, arrow function"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/javascript/this-bind-apply-call"}}}