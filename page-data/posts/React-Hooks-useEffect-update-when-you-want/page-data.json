{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/React-Hooks-useEffect-update-when-you-want","webpackCompilationHash":"b278502301cd5f903d77","result":{"data":{"markdownRemark":{"id":"75218a33-6aac-5b23-9da6-5e9a04ec50c7","html":"<p>I wanted to use <code class=\"language-text\">useEffect()</code> to work like <code class=\"language-text\">componentDidUpda()</code>. Whenever I click a certain button, I wanted the states updated so that React may render components. Last time I talked about how to add <code class=\"language-text\">[]</code> as a second argument to <code class=\"language-text\">useEffect()</code> in order to prevent infinte loops. This time, it is about how to call it when you want.</p>\n<p>Check out the code below;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">useEffect(() =&gt; {\n    if (joinPartyBtnClick) {\n      const getToken = localStorage.getItem(&quot;wtw-token&quot;);\n      fetch(`${ADDRESS}party/join`, {\n        method: &quot;post&quot;,\n        headers: {\n          &quot;Content-Type&quot;: &quot;application/json&quot;,\n          Accept: &quot;application/json&quot;,\n          Authorization: getToken\n        },\n        body: JSON.stringify({\n          id : idJoinParty\n        })\n      }).then((response) =&gt; {\n        if (response.status === 200) {\n          setParticipationStatus(!participationStatus);\n        }\n        setJoinPartyBtnClick(!joinPartyBtnClick);\n      });\n    }\n  }, [joinPartyBtnClick]);</code></pre></div>\n<p>This is very straight-forward. If <code class=\"language-text\">joinPartyBtnClick === true</code>, you run the <code class=\"language-text\">fetch</code> as written. I can set that the <code class=\"language-text\">useEffect()</code> runs whenever the state of <code class=\"language-text\">joinPartyBtnClick</code> changes by adding it as the second argument like above.</p>","fields":{"slug":"/posts/React-Hooks-useEffect-update-when-you-want","tagSlugs":["/tag/react/","/tag/reacthooks/"]},"frontmatter":{"date":"2019-07-09T22:27:37.121Z","description":"How to use `useEffect()` instead of `componentDidUpdate()`","tags":["react","reacthooks"],"title":"React Hooks [useEffect()] how to update when you want"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/React-Hooks-useEffect-update-when-you-want"}}}