{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/babel/babel-with-typescript","webpackCompilationHash":"01f1efd54329212fe95a","result":{"data":{"markdownRemark":{"id":"51d9fe09-f228-5062-a4dd-3319ccfb4306","html":"<p>Babel 7 supports TypeScript. Since I am pretty new to web development, I did not fully understand why people were struggling to use Babel with TypeScript. According to what I have found online, Babel did not support type check, which is a key feature of TypeScript. And TypeScript itself could do both compiling and type checking. But now Babel 7 allows TypeScript to compile faster by allowsing the TypeScript compiler to only check types wihtout emitting files</p>\n<p>Install all the necessary plugins:\n<code class=\"language-text\">npm install --save-dev @babel/preset-typescript @babel/preset-env @babel/plugin-proposal-class-properties @babel/plugin-proposal-object-rest-spread</code></p>\n<p>Set up <code class=\"language-text\">.babelrc</code> like below</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;presets&quot;: [\n        &quot;@babel/env&quot;,\n        &quot;@babel/preset-typescript&quot;\n    ],\n    &quot;plugins&quot;: [\n        &quot;@babel/proposal-class-properties&quot;,\n        &quot;@babel/proposal-object-rest-spread&quot;\n    ]\n}</code></pre></div>\n<p>Create a <code class=\"language-text\">tsconfig.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;compilerOptions&quot;: {\n    // Target latest version of ECMAScript.\n    &quot;target&quot;: &quot;esnext&quot;,\n    // Search under node_modules for non-relative imports.\n    &quot;moduleResolution&quot;: &quot;node&quot;,\n    // Process &amp; infer types from .js files.\n    &quot;allowJs&quot;: true,\n    // Don&#39;t emit; allow Babel to transform files.\n    &quot;noEmit&quot;: true,\n    // Enable strictest settings like strictNullChecks &amp; noImplicitAny.\n    &quot;strict&quot;: true,\n    // Disallow features that require cross-file information for emit.\n    &quot;isolatedModules&quot;: true,\n    // Import non-ES modules as default imports.\n    &quot;esModuleInterop&quot;: true\n  },\n  &quot;include&quot;: [\n    &quot;src&quot;\n  ]\n}</code></pre></div>","fields":{"slug":"/posts/babel/babel-with-typescript","tagSlugs":["/tag/babel/","/tag/typescript/"]},"frontmatter":{"date":"2019-12-07T23:27:37.121Z","description":"Using Babel with TypeScript","tags":["babel","typescript"],"title":"Babel - How to Make a Babel Plugin"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/babel/babel-with-typescript"}}}