{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react/reconciliation-and-virtual-dom","webpackCompilationHash":"f7d08762b766a9c33e41","result":{"data":{"markdownRemark":{"id":"967896c9-d0b0-505c-a979-2c360291df23","html":"<h1 id=\"tldr\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h1>\n<p>React uses Virtual DOM before updating the real DOM, or <strong>reconciles</strong> in order to maximize efficiency</p>\n<h1 id=\"explanation\"><a href=\"#explanation\" aria-label=\"explanation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanation</h1>\n<p>React uses <code class=\"language-text\">Virtual DOM</code>, which is easier and faster to manipulate than <code class=\"language-text\">Real DOM</code>. When a state of a component changes, React updates <code class=\"language-text\">Virtual DOM</code> in order to apply such change then <code class=\"language-text\">reconciles</code>, or compares the <code class=\"language-text\">Virtual DOM</code> with the previous <code class=\"language-text\">Virtual DOM</code> and then only the changes are updated to the <code class=\"language-text\">Real DOM</code></p>\n<p>Sometimes, certain changes call <code class=\"language-text\">render()</code> on the Real DOM even though the <code class=\"language-text\">Virtual DOM</code> does not reflect such changes due to a side effect. This is where <code class=\"language-text\">shouldComponentUPdate()</code> comes in to check if <code class=\"language-text\">render()</code> must be called again. However, such operation could be difficult with deep fields.</p>\n<p>But when you use immutable objects like an array as a state, it is difficult to check whether the real DOM should be updated using <code class=\"language-text\">shouldComponentUpdate()</code> since you have to compare every single element in order to check if the state has been changed. You also have to use methods like <code class=\"language-text\">slice()</code> in order to update such states because arrays are immutable.</p>\n<p>Using native methods like <code class=\"language-text\">Array.slice()</code> or <code class=\"language-text\">Object.assign()</code> is not too bad, however, if the size of such states are big, it would be way to expensive to re-create such states to simply check whether to update components or not.</p>\n<p>This is where <code class=\"language-text\">Immer</code> comes in. By updating the state using <code class=\"language-text\">Immer</code>, you donâ€™t have to re-create your states. And all the changes to <code class=\"language-text\">draftState</code> are applied to <code class=\"language-text\">newState</code> when all the mutations are complete. Therefore, the efficiency would increase as well.</p>","fields":{"slug":"/posts/react/reconciliation-and-virtual-dom","tagSlugs":["/tag/react/"]},"frontmatter":{"date":"2020-01-20T13:27:37.121Z","description":"React reconciliation to improve efficiency","tags":["react"],"title":"React - Reconciliation and Virtual DOM"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/react/reconciliation-and-virtual-dom"}}}