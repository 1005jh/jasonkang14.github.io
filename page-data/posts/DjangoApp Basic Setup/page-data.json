{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/DjangoApp Basic Setup","webpackCompilationHash":"3be2fbf12ba176c6223d","result":{"data":{"markdownRemark":{"id":"55edb0ae-b2f5-51ac-8398-6e20da6a98b2","html":"<p>Installing Django was difficult because I did not know the difference between Python and Python3. With the help of a mentor and fellow colleagues, I got the job done.</p>\n<p>Here are some important words for which I want to make a remark to help me understand how to make a Django app better.</p>\n<h1 id=\"1-creating-a-project\"><a href=\"#1-creating-a-project\" aria-label=\"1 creating a project permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Creating a Project</h1>\n<p><code class=\"language-text\">django-admin startproject &quot;foldername&quot;</code><br></p>\n<ul>\n<li>this command makes a folder that includes necessary Python3 files to start a Django project.\n<code class=\"language-text\">manage.py</code>: a command-line utility that lets you interact with Django project\n<code class=\"language-text\">mysite/</code>: a Python package\n<code class=\"language-text\">mysite/__init__.py</code>: an empty file that tells Python that this directory is must be considered a Python package.\n<code class=\"language-text\">mysite/settings.py</code>: settings/configuration for this Django project.\n<code class=\"language-text\">mysite/urls.py</code>: the URL declarations for this project. something like table of contents\n<code class=\"language-text\">mysite/wsgi.py</code>: an emtry-point for WSGI-compatible seb servers.</li>\n<li>I have no idea what the empty-point or WSGI-compatible mean. gotta do more research on it</li>\n</ul>\n<h1 id=\"2-the-development-server\"><a href=\"#2-the-development-server\" aria-label=\"2 the development server permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. The development server</h1>\n<p><code class=\"language-text\">runserver</code> command: starts the development server on the internal IP at port 8000.</p>\n<ul>\n<li>if you use this command, you can see something…</li>\n</ul>\n<h1 id=\"3-creating-the-polls-app\"><a href=\"#3-creating-the-polls-app\" aria-label=\"3 creating the polls app permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Creating the Polls app</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python3 manage.py startapp polls</code></pre></div>\n<p><code class=\"language-text\">startapp</code> command makes a folder that includes necessary Python3 files to start a Django app like <code class=\"language-text\">startproject</code> command does for a project. <br></p>\n<ul>\n<li>App: a Web application that does something</li>\n<li>Project: a collection of configuration and apps for a particular website.</li>\n</ul>\n<p>So a project consists of many apps, and an app can be used for different projects. <br>\nIt looks like this project is going to have a polls app.</p>\n<h1 id=\"4-write-your-first-view\"><a href=\"#4-write-your-first-view\" aria-label=\"4 write your first view permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Write your first view</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## polls/views.py\n\nfrom django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse(&quot;Hello, world. You&#39;re at the polls index.&quot;)</code></pre></div>\n<p>In order to call the view, gotta map it to a URL, which requires a URLconf. <br>\nTo do this, create a <code class=\"language-text\">urls.py</code>file under <code class=\"language-text\">polls/</code> and write the code below into it.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## polls/urls.py\n\nfrom django.urls import path\n\nfrom . import views\n\nurlpatterns = [\n    path(&#39;&#39;, views.index, name=&#39;index&#39;),\n]</code></pre></div>\n<p>Now point the root URLconf at the <code class=\"language-text\">polls.urls</code> module.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## mysite/urls.py\nfrom django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path(&#39;polls/&#39;, include(&#39;polls.urls&#39;)),\n    path(&#39;admin/&#39;, admin.site.urls),\n]</code></pre></div>\n<p><code class=\"language-text\">include()</code>function allows referencing other URLconfs.</p>\n<ul>\n<li>Django chops off whatever part of the URL matched up to that point and send the remaining string to the included URLconf for further procesing.</li>\n<li>use this when you include other URL patterns.</li>\n</ul>\n<h2 id=\"path-function\"><a href=\"#path-function\" aria-label=\"path function permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">path()</code> function</h2>\n<ul>\n<li>takes four argument and returns an element for inclusion in urlpatterns. <b>route</b> and <b>view</b> are required <b>kwargs</b> and <b>name</b> are not</li>\n<li>\n<p><b>route</b>: a string that contains a URL pattern.</p>\n<ul>\n<li>in the example of path(‘polls/’, include(‘polls.urls’)), Django starts at the first pattern, which is <b>‘polls/’</b> and makes its way down the list</li>\n<li>the string may contain angle brackets to capture a part of the URL and send it as a keyword argument to the <b>view</b></li>\n</ul>\n</li>\n<li><b>view</b>: view function or the result of <code class=\"language-text\">as_view()</code> for class-based views. could also be an <code class=\"language-text\">django.urls.include()</code></li>\n<li><b>kwargs</b>: allows you to pass additional arguments to the view function or method</li>\n<li><b>name</b>: naming your URL lets you refer to it unambiguously from elsewhere in Django, allowing you to make global changes to the URL patterns</li>\n</ul>","fields":{"slug":"/posts/DjangoApp Basic Setup","tagSlugs":["/tag/python/","/tag/django/"]},"frontmatter":{"date":"2019-06-17T14:27:37.121Z","description":"Following a Django tutorial on djangoproject.com to create a django app.","tags":["Python","Django"],"title":"Django App[01] Basic setup"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/DjangoApp Basic Setup"}}}