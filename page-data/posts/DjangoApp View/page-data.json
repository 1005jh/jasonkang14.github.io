{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/DjangoApp View","webpackCompilationHash":"9483a58d072124439c1f","result":{"data":{"markdownRemark":{"id":"3ea4e1c9-c770-5d01-9b63-a1ba1c2cd621","html":"<h4 id=\"view--a-type-of-web-page-in-a-django-application-that-generally-servers-a-specific-function-and-a-specific-template\"><a href=\"#view--a-type-of-web-page-in-a-django-application-that-generally-servers-a-specific-function-and-a-specific-template\" aria-label=\"view  a type of web page in a django application that generally servers a specific function and a specific template permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>view : a type of Web page in a Django application that generally servers a specific function and a specific template.</h4>\n<h1 id=\"1-writing-a-view\"><a href=\"#1-writing-a-view\" aria-label=\"1 writing a view permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Writing a View</h1>\n<ul>\n<li>web pages and other content are delivered by views</li>\n<li>each view is represented by a simple Python function: Django chooses a view by examining the URL that’s requested.</li>\n<li>but it doesn’t examine the entire URL, it looks for just enough information to display the requested web page</li>\n</ul>\n<h4 id=\"example-request-polls34\"><a href=\"#example-request-polls34\" aria-label=\"example request polls34 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example: request /polls/34</h4>\n<ol>\n<li>loads <code class=\"language-text\">mysite.urls.py</code></li>\n<li>finds the variable named <code class=\"language-text\">urlpatterns</code></li>\n<li>traverses the patterns in order</li>\n<li>finds the match at <code class=\"language-text\">polls/</code></li>\n<li>strips off the matching text and sends the remianing text to the “polls.urls”</li>\n<li>matches <code class=\"language-text\">&lt;int:question_id&gt;/</code></li>\n<li>results in a call to the <code class=\"language-text\">detail()</code> like below</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">deetail(request=&lt;HttpRequest object&gt;, question_id=34)</code></pre></div>\n<ul>\n<li>using angle brakets captures part of the URL and sends it as a keyword argument to the view function</li>\n<li><code class=\"language-text\">:question_id&gt;</code> part of the string defines the name that will be used to idenfity the matched pattern</li>\n<li><code class=\"language-text\">&lt;int:</code> part is a converter that determines what patterns should match this part of the URL path</li>\n</ul>\n<h1 id=\"2-writing-a-view-that-does-something\"><a href=\"#2-writing-a-view-that-does-something\" aria-label=\"2 writing a view that does something permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Writing a View That Does Something</h1>\n<h4 id=\"each-view-is-responsible-for-doing-one-of-two-things\"><a href=\"#each-view-is-responsible-for-doing-one-of-two-things\" aria-label=\"each view is responsible for doing one of two things permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Each view is responsible for doing one of two things</h4>\n<ol>\n<li>returning an <code class=\"language-text\">HttpResponse</code> object containing the content for the requested page</li>\n<li>raising an exception such as <code class=\"language-text\">Http404</code></li>\n</ol>\n<h5 id=\"a-shortcut-render\"><a href=\"#a-shortcut-render\" aria-label=\"a shortcut render permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A shortcut: <code class=\"language-text\">render()</code></h5>\n<p>no need to import <code class=\"language-text\">loader</code> and <code class=\"language-text\">HttpResponse</code></p>\n<ul>\n<li>the <code class=\"language-text\">render()</code> function takes the request object as its first argument, a template name as its second argument and a dictionary as its optional argument</li>\n</ul>\n<h1 id=\"3-raising-a-404-error\"><a href=\"#3-raising-a-404-error\" aria-label=\"3 raising a 404 error permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Raising a 404 Error</h1>\n<ul>\n<li>raises an exception if a requested id does not exist.</li>\n<li>use <code class=\"language-text\">get()</code> and raise <code class=\"language-text\">Http404</code> if the object does not exist. —the object created in detail.html, which means that there is no question made</li>\n<li><code class=\"language-text\">The get_object_or_404()</code> function</li>\n<li>takes a Django model as its first argument and an arbitrary number of keyword arguments</li>\n<li>passes to the get() function of the model’s manager.</li>\n<li>raises Http404 if the object doesn’t exist.</li>\n</ul>\n<h1 id=\"4-use-the-template-system\"><a href=\"#4-use-the-template-system\" aria-label=\"4 use the template system permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Use the template system</h1>\n<ul>\n<li>The template system uses dot-lookup syntax to access variable attributes.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## template/detail.html\n\n&lt;h1&gt;{{ question.question_text }}&lt;/h1&gt;\n&lt;ul&gt;\n{% for choice in question.choice_set.all %}\n    &lt;li&gt;{{ choice.choice_text }}&lt;/li&gt;\n{% endfor %}\n&lt;/ul&gt;</code></pre></div>\n<ul>\n<li>first Django does a dictionary look-up to find the object question, and fails</li>\n<li>then it tries an attribute look-up, then succeeds</li>\n<li>if it fails the attribute look-up, it would try a list-index look-up</li>\n</ul>\n<p>Method-calling happens in the {% for %} loop: question.choice<em>set.all is interpreted as the Python code question.choice</em>set.all(), which returns an iterable of Choice objects and is suitable for use in the {% for %} tag.</p>\n<h1 id=\"5-removing-hardcoded-urls\"><a href=\"#5-removing-hardcoded-urls\" aria-label=\"5 removing hardcoded urls permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Removing Hardcoded URLs</h1>\n<p><code class=\"language-text\">index.html</code>is originally written as below</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;li&gt;&lt;a href=&quot;/polls/{{ question.id }}/&quot;&gt;{{ question.question_text }}&lt;/a&gt;&lt;/li&gt;</code></pre></div>\n<p>However, this would cause a problem if there are many templates to work with because there would be a lot of templates for which you need to hardcode. Since you have defined the name argument in the <code class=\"language-text\">path()</code> functions in the <code class=\"language-text\">polls.urls</code> module, you can change the hard-coded part like below. Using {% url %} template tag</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;li&gt;&lt;a href=&quot;{% url &#39;detail&#39; question.id %}&quot;&gt;{{ question.question_text }}&lt;/a&gt;&lt;/li&gt;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## polls/urls.py\n\nurlpatterns = [\n    path(&#39;&#39;, views.index, name=&#39;index&#39;),\n    path(&#39;&lt;int:question_id/&#39;, views.detail, name=&#39;detail&#39;),\n    path(&#39;&lt;int:question_id&gt;/results/&#39;, views.results, name=&#39;results&#39;),\n    path(&#39;specifics&lt;int:question_id&gt;/vote/&#39;, views.vote, name=&#39;vote&#39;),\n]\n\n## the &#39;name&#39; value as called by the {% url %} template tag</code></pre></div>","fields":{"slug":"/posts/DjangoApp View","tagSlugs":["/tag/python/","/tag/django/","/tag/view/"]},"frontmatter":{"date":"2019-06-17T16:17:37.121Z","description":"Following a Django tutorial on djangoproject.com to create a django app.","tags":["Python","Django","View"],"title":"Django App[04] View"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/DjangoApp View"}}}