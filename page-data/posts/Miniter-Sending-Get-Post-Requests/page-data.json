{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Miniter-Sending-Get-Post-Requests","webpackCompilationHash":"a20ee411f975cd09bb96","result":{"data":{"markdownRemark":{"id":"11bffd24-8443-5d21-8a51-21cf4bcf3212","html":"<p>There are two ways to <code class=\"language-text\">fetch</code> data from server:<code class=\"language-text\">get</code> and <code class=\"language-text\">post</code>.<br>\nThankfully the methods are very straight-forward. <code class=\"language-text\">get</code> is used in order to merely get data, and <code class=\"language-text\">post</code> is used to interact with the server by posting some data and retrieve it back.</p>\n<p><code class=\"language-text\">get</code> was used to display previously generated tweets on screen, and <code class=\"language-text\">post</code> was used to sign up, log in, and generate new tweets.</p>\n<h1 id=\"1-get-to-display-previously-generated-tweets\"><a href=\"#1-get-to-display-previously-generated-tweets\" aria-label=\"1 get to display previously generated tweets permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. <code class=\"language-text\">Get</code> to display previously generated tweets</h1>\n<p>Here is the code for the <code class=\"language-text\">get</code> method;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fetch (&#39;http://localhost:8000/api/tweet&#39;, {mode: &#39;cors&#39;})\n  .then (\n    (response) =&gt; {\n      response.json().then((data) =&gt; {\n        for (let i=data.length-1; i&gt;=0; i--) {\n          const originalTweet = document.createElement(&#39;li&#39;);\n          originalTweet.innerHTML = makeTweetList(data[i]);\n          elTweetList.appendChild(originalTweet);\n        }\n      });\n    }\n  )</code></pre></div>\n<ol>\n<li><code class=\"language-text\">fetch</code> information from the url</li>\n<li><code class=\"language-text\">then</code> wait for a <code class=\"language-text\">response</code></li>\n<li><code class=\"language-text\">then</code> use the <code class=\"language-text\">data</code> from the <code class=\"language-text\">response</code> in order to do something.</li>\n</ol>\n<p>Here is the back-end part:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Tweet_class(View):\n    def get(self, request, *args, **kwargs):\n        tweet_list = list(Tweet.objects.values())\n        return JsonResponse(tweet_list, safe=False)</code></pre></div>\n<p>when the server gets a <code class=\"language-text\">get</code> request, it returns tweet_list, which is in the form of an array(or a list in python) to the front-end. Therefore, the fetched <code class=\"language-text\">data</code> looks like an array.</p>\n<p><img src=\"https://scontent-hkg3-1.xx.fbcdn.net/v/t1.0-9/65284788_10219135481398812_1402279772439969792_o.jpg?_nc_cat=101&#x26;_nc_oc=AQlnw2un3dSg9S6vSmjPY2OdcZkfxMePJvhGY1XZnJli6Cejciwe2DmA25wqszg89WQ&#x26;_nc_ht=scontent-hkg3-1.xx&#x26;oh=6bab252688ffa04c297e64b0b83a01b0&#x26;oe=5DC1DE49\" alt=\"fetched data\"></p>\n<p>The retrieved data ges paired up with previously written code to display previously generated tweets.</p>\n<h1 id=\"2-post-to-interact-with-the-server\"><a href=\"#2-post-to-interact-with-the-server\" aria-label=\"2 post to interact with the server permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">Post</code> to interact with the server.</h1>\n<p>Here is how I wrote a JavaScript code for sign-up.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const signUp = () =&gt; {\n  fetch(&#39;http://localhost:8000/api/account&#39;, {\n    method: &#39;post&#39;,\n    headers: {\n      &quot;Content-type&quot;: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;\n    },\n    body: JSON.stringify({\n      &quot;user&quot; : elNewId.value,\n      &quot;name&quot; : elNewName.value,\n      &quot;password&quot; : elNewPassword.value,\n      &quot;profile&quot; : elNewProfile.value\n    })\n  })\n\n  .then(\n    (response) =&gt; {\n      console.log(1);\n      response.json().then((data) =&gt; {\n        console.log(data);\n        alert(&quot;회원가입 성공&quot;);\n      })\n  })\n\n  .catch(function (error) {\n    console.log(&#39;Request failed&#39;, error);\n  });\n}</code></pre></div>\n<p><code class=\"language-text\">signUp()</code> gets invoked when sign-up button is clicked. In order to sign up for Miniter,</p>\n<ol>\n<li><code class=\"language-text\">fetch</code> information from the url</li>\n<li><code class=\"language-text\">post</code> your data (userid, name, password, profile)</li>\n<li><code class=\"language-text\">then</code> wait for a <code class=\"language-text\">response</code></li>\n<li><code class=\"language-text\">then</code> use the <code class=\"language-text\">data</code> from the <code class=\"language-text\">response</code> in order to do something.</li>\n</ol>\n<p>When a <code class=\"language-text\">post</code> request is made from the front-end, the back-end receives data and stores it in the form of a list (or an array in JavaScript).</p>\n<p><img src=\"https://scontent-hkg3-1.xx.fbcdn.net/v/t1.0-9/64495197_10219135524159881_7340781733786157056_n.jpg?_nc_cat=100&#x26;_nc_oc=AQnFZmh8ODTkhgdufGuYGOThYTRTOXGMbso3gVjVDtF8cXxXrVkhf7s5vYRsiel7R88&#x26;_nc_ht=scontent-hkg3-1.xx&#x26;oh=1c2a093e2bb525bcbf3447d4c5dfa806&#x26;oe=5D8C99A4\" alt=\"sign up\"></p>","fields":{"slug":"/posts/Miniter-Sending-Get-Post-Requests","tagSlugs":["/tag/javascript/","/tag/django/","/tag/api/","/tag/html/"]},"frontmatter":{"date":"2019-06-20T21:56:37.121Z","description":"Sending a post request to a locally created API to build log-in, sign-up, and making tweets.","tags":["javascript","django","api","html"],"title":"Miniter[07]Sending Get/Post Requests"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Miniter-Sending-Get-Post-Requests"}}}