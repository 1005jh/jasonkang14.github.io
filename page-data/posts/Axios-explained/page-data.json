{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Axios-explained","webpackCompilationHash":"e8220acf33edd1ba0305","result":{"data":{"markdownRemark":{"id":"f7e57ce6-3640-5a5a-bddb-11fcaf508474","html":"<p><code class=\"language-text\">Axios</code> is a library you can use to perform HTTP requests. Basically, you use this in order to send a request to a GraphQL or REST API. <code class=\"language-text\">Axios</code> is similar to the native <code class=\"language-text\">Fetch API</code>, but <code class=\"language-text\">Axios</code> has some advantages.</p>\n<ol>\n<li>Automatic Transformation\nWhen you use the native <code class=\"language-text\">Fetch API</code>, you have to transfrom the <code class=\"language-text\">response</code> to <code class=\"language-text\">json</code> in order to use it. This means that it takes a while for you to receive a <code class=\"language-text\">response</code> from the server since you have to wait until a <code class=\"language-text\">response</code> gets transformed into <code class=\"language-text\">json</code>.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Fetch API\nfetch(ADDRESS + &quot;restaurant&quot;)\n.then(res =&gt; res.json())\n.then(result =&gt; {\n    this.props.setStore(result);\n});</code></pre></div>\n<p>However, <code class=\"language-text\">Axios</code> converts the data to <code class=\"language-text\">json</code> automatically, so you have one less step to perform. This means that using a <code class=\"language-text\">response</code> from the server would not take as long.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// Axios\nif (storeId === undefined) {\n    axios(ADDRESS + &quot;restaurant&quot;)\n    .then(res =&gt; {\n        this.props.setStore(res);\n    });\n}</code></pre></div>\n<ol start=\"2\">\n<li>\n<p>Built-in CSRF Protection\nCSRF stands for Cross Site Request Forgery. For example, after you log in to your bank account, a hacker may send you a link to retreive the token you used to log in to your bank account. Then, the hacker can use your token to log in to your account.</p>\n<p>But, <code class=\"language-text\">Axios</code> has a built-in protection against it in order to protect your bank account information in the case above, or your server as well.</p>\n</li>\n<li>Monitor POST Request Progress\nApparently you can see the process of receiving a response after sending a <code class=\"language-text\">POST</code> request, but have not experienced this yet. If I get to experience this, I will make sure to make a post about it.</li>\n</ol>","fields":{"slug":"/posts/Axios-explained","tagSlugs":["/tag/axios/","/tag/http/","/tag/request/"]},"frontmatter":{"date":"2019-07-12T14:27:37.121Z","description":"Explaining Axios","tags":["axios","http","request"],"title":"What Is Axios and Why Do You Use it?"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Axios-explained"}}}