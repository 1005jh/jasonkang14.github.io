{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/React-Native-Multipart-Form-Data-to-API","webpackCompilationHash":"7119cf2e70ed4f19ec21","result":{"data":{"markdownRemark":{"id":"0e015f4b-21f3-5ace-9991-766168345cef","html":"<p>The purpose of this code was to send an image file to an API in order to upload an image to <code class=\"language-text\">AWS S3</code> to retrieve an image URL.</p>\n<p>In order to send a file to a server, you have to send it as a <code class=\"language-text\">multipart/form-data</code>. Since I am using an image, I used a library called <code class=\"language-text\">react-native-image-picker</code>. It is very easy to use the libraryâ€”you just have to follow the instruction written in the official Github.</p>\n<p><code class=\"language-text\">npm i --save react-native-image-picker</code></p>\n<p>and then you just add the code given in the instruction .</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">_addPicture = () =&gt; {\n    ImagePicker.showImagePicker(options, (response) =&gt; {\n\n      if (response.didCancel) {\n        console.log(&quot;User cancelled image picker&quot;);\n      } else if (response.error) {\n        console.log(&quot;ImagePicker Error: &quot;, response.error);\n      } else if (response.customButton) {\n        console.log(&quot;User tapped custom button: &quot;, response.customButton);\n      } else {\n        const source = { uri: response.uri };\n\n        this.setState({\n          image: source,\n          imageName: response.fileName\n        });\n      }\n    });\n  };</code></pre></div>\n<p>Now that you have added the picture, you have to create a <code class=\"language-text\">formData</code> in order to send the picture to an API.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">_createFormData = () =&gt; {\n    const { image, imageName } = this.state;\n    const imageUri = image.uri.slice(7);\n\n    let picture = new FormData();\n    let file = {\n      uri: imageUri,\n      type: &quot;image/jpeg&quot;,\n      name: imageName\n    }\n    picture.append(&quot;image&quot;, file);\n    return picture\n  }</code></pre></div>\n<p><code class=\"language-text\">image</code> is an object which contains a key called uri whose value contains some prefix that <code class=\"language-text\">multipart/form-data</code> cannot recognize. So, I used the <code class=\"language-text\">slice()</code> method in order to cut the first seven letters off the string.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">_uploadPicture = async () =&gt; {\n    const accessToken = await AsyncStorage.getItem(&#39;@storage_Key&#39;);\n    const picture = this._createFormData()\n    const pictureUploadSettings = {\n      method: &quot;POST&quot;,\n      headers: {\n        Authorization: `Token ${accessToken}`,\n        &quot;Content-Type&quot;: &quot;multipart/form-data&quot;\n      },\n      body: picture\n    }\n\n    const response = await fetch(`${API_URL}listener/upload/picture`, pictureUploadSettings);\n    const pictureUri = await response.json();\n\n    return pictureUri.picture_uri\n}</code></pre></div>\n<p>Then I sent the image file to the API using the code above.</p>","fields":{"slug":"/posts/React-Native-Multipart-Form-Data-to-API","tagSlugs":["/tag/reactnative/","/tag/aws/"]},"frontmatter":{"date":"2019-08-06T19:27:37.121Z","description":"How to send an image file to an API to have it uploaded to AWS S3","tags":["reactnative","aws"],"title":"React Native - Sending an Image to an API to upload a file"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/React-Native-Multipart-Form-Data-to-API"}}}