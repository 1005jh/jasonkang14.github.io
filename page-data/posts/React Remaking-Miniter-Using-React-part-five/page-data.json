{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/React Remaking-Miniter-Using-React-part-five","webpackCompilationHash":"8b09bde4fa9de77d777c","result":{"data":{"markdownRemark":{"id":"655727da-f6da-5736-aa51-8b418db451da","html":"<p>A React list is like a JavaScript array, but it is recommended—not required—to provide a key to each element of a list. The key provided to each elemenet must be unique to the element. React executes the code whether a unique key is assigned to each element or not, but it keep throwing a warning if it is not.</p>\n<h1 id=\"1-keys\"><a href=\"#1-keys\" aria-label=\"1 keys permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Keys</h1>\n<p>According to the React official document, key helps React identify which items have changed and are added/removed. Which is why keys have to be unique in order to distinguish which items have been affected by a change.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const todoItems = todos.map((todo) =&gt;\n  &lt;li key={todo.id}&gt;\n    {todo.text}\n  &lt;/li&gt;\n);</code></pre></div>\n<p>I have said that React will still execute your code even if a list doesn’t have a key assigned to it, and that is because React automatically assigns an index as a key to each element, but there are some negative impacts to it, which is why you gotta get some unique keys to each and every item. Details can be found <a href=\"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a></p>\n<p>It is recommended to use <code class=\"language-text\">shortid</code>, which generates short non-sequential url-friendly unique keys like below</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var shortid = require(&#39;shortid&#39;);\nfunction createNewTodo(text) {\n  return {\n    completed: false,\n    id: shortid.generate(),\n    text\n  }\n}</code></pre></div>\n<h1 id=\"2-keys-with-map-method\"><a href=\"#2-keys-with-map-method\" aria-label=\"2 keys with map method permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Keys with <code class=\"language-text\">map()</code> method</h1>\n<p>to display tweets for my miniter project, I made each tweet as an object and nested it into an array. Instead of requiring <code class=\"language-text\">shortid</code>, I decided to use the indexes of the array with a prefix like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  this.state.tweetArr.map((el, idx) =&gt;\n          &lt;DisplayTweets\n              key={`tweet-${idx}`}\n              tweet={el}\n          /&gt;\n\n  )\n}</code></pre></div>\n<p>if I were to connect this with an API, it would be better to require <code class=\"language-text\">shortid</code>, but for the sake of this specific project, I decided to go with this.</p>","fields":{"slug":"/posts/React Remaking-Miniter-Using-React-part-five","tagSlugs":["/tag/react/","/tag/css/","/tag/javascript/"]},"frontmatter":{"date":"2019-06-26T20:56:37.121Z","description":"Remaking Miniter Using React","tags":["react","css","javascript"],"title":"React[05]Remaking Miniter Using React V - List and Keys"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/React Remaking-Miniter-Using-React-part-five"}}}