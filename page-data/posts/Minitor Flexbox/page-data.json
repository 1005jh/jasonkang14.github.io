{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Minitor Flexbox","webpackCompilationHash":"3be2fbf12ba176c6223d","result":{"data":{"markdownRemark":{"id":"53ff2a2a-5a2b-5444-9df1-7dcbf5dd0366","html":"<h4 id=\"definition-by-mdn--the-flex-css-property-sets-how-a-flex-item-will-grow-or-shrink-to-fit-the-space-available-in-its-flex-container\"><a href=\"#definition-by-mdn--the-flex-css-property-sets-how-a-flex-item-will-grow-or-shrink-to-fit-the-space-available-in-its-flex-container\" aria-label=\"definition by mdn  the flex css property sets how a flex item will grow or shrink to fit the space available in its flex container permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>definition by MDN : the <code class=\"language-text\">flex</code> CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.</h4>\n<p>I used <code class=\"language-text\">flex</code> property in order to display two boxes horizontally in my Miniter.\n<img src=\"https://scontent-hkg3-1.xx.fbcdn.net/v/t1.0-9/64529894_10219110777621233_7758357828900749312_o.jpg?_nc_cat=106&#x26;_nc_oc=AQlqJ6of7W1GWUBQ9ng_r7agwRYXVLGnDhZKibk1joLU8G6JN2IlFQspmlZq072PHpk&#x26;_nc_ht=scontent-hkg3-1.xx&#x26;oh=adce80d702b42423ec384ba8d22b7d5d&#x26;oe=5DC6A56E\" alt=\"Miniter Main Page\"></p>\n<p>The two <code class=\"language-text\">div</code>boxes were displayed vertically by default, so I set the display of the body as <code class=\"language-text\">flex</code> like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//HTML\n\nbody {\n  display: flex;\n  background-color: #e6e6e6;\n}</code></pre></div>\n<p>You have to set the display of the parent element <code class=\"language-text\">flex</code> in order to have the child elements displayed horizontally. You can also use a property called <code class=\"language-text\">flex-direction</code> in order to display your image in different ways. The properties are very straight forward.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.flex-container {\n  display: flex;\n  flex-direction: column, column-reverse, row, or row-reverse;\n}</code></pre></div>\n<br>\n<p><code class=\"language-text\">flex-wrap</code> property specified whether you want the flex items wrapped or not. It would help you understand better if you try the examples from W3Schools in the link below.\n<a href=\"https://www.w3schools.com/css/css3_flexbox.asp#flex-wrap\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Flex-Wrap</a>\n<br><br></p>\n<p><code class=\"language-text\">justify-content</code> property is used to align the flex items. I think this would be very helpful when you are trying to ditribute child elements evenly. It would help you understand better if you try the examples from W3Schools in the link below.\n<a href=\"https://www.w3schools.com/css/css3_flexbox.asp#justify-content\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Justify-Content</a></p>","fields":{"slug":"/posts/Minitor Flexbox","tagSlugs":["/tag/we-code/","/tag/coding-bootcamp/","/tag/html/","/tag/css/","/tag/flex/"]},"frontmatter":{"date":"2019-06-08T20:27:37.121Z","description":"Use of flexbox in attempt to make a mini-version of Twitter.","tags":["WeCode","Coding Bootcamp","HTML","CSS","flex"],"title":"Miniter[04] Flexbox"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/Minitor Flexbox"}}}