{"componentChunkName":"component---src-templates-post-template-js","path":"/typescript/classes-explained","webpackCompilationHash":"f5b7725ad6df8bc2c031","result":{"data":{"markdownRemark":{"id":"bd2001ec-2f72-5029-a201-4468ac09785c","html":"<p>Classes are a programming property used in Objected Oriented Programming. In TypeScript, you can use a <code class=\"language-text\">Class</code> with <code class=\"language-text\">Interface</code> like below;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Student {\n    fullName: string;\n    constructor(public firstName: string, public middleInitial: string, public lastName: string) {\n        this.fullName = firstName + &quot; &quot; + middleInitial + &quot; &quot; + lastName;\n    }\n}\n\ninterface Person {\n    firstName: string;\n    lastName: string;\n}\n\nfunction greeter(person: Person) {\n    return &quot;Hello, &quot; + person.firstName + &quot; &quot; + person.lastName;\n}\n\nlet user = new Student(&quot;Jane&quot;, &quot;M.&quot;, &quot;User&quot;);\n\ndocument.body.textContent = greeter(user);</code></pre></div>\n<p>First you declare a class called <code class=\"language-text\">Student</code>. In its constructor, it takes arguments like <code class=\"language-text\">firstName</code>, <code class=\"language-text\">middleInitial</code>, and <code class=\"language-text\">lastName</code>. The use of <code class=\"language-text\">public</code> on arguments indicate that you can create properties with that name.</p>\n<p>The <code class=\"language-text\">Person</code> interface, which is the type of an argument for the function <code class=\"language-text\">greeter</code>, declares the types of <code class=\"language-text\">firstName</code> and <code class=\"language-text\">lastName</code>. Thus ensuring the created <code class=\"language-text\">user</code> object has the types that can be used for the <code class=\"language-text\">greeter</code> function.</p>","fields":{"slug":"/typescript/classes-explained","tagSlugs":["/tag/typescript/"]},"frontmatter":{"date":"2020-04-07T19:53:37.121Z","description":"Explaning classes in TypeScript","tags":["typescript"],"title":"TypeScript - Classes"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/typescript/classes-explained"}}}